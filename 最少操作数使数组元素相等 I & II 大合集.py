# coding=utf-8
#  给定一个长度为n的非空整数数组，找出使数组所有元素均相等的最少操作数，其中一次操作将其中n-1个数加上1。
# 输入: [1,2,3]
# 输出: 3
# 说明: 最少3次操作到达要求：[1,2,3]  =>  [2,3,3]  =>  [3,4,3]  =>  [4,4,4]
# 将n-1个数加1，相当于将所有数都加1，再将其中一个数减去1。
# 将所有数都加1这个操作，其实不会改变任何数的相对大小，也就是所有数两两之间的差都是不会变的，这对于要使所有元素均相等的目标来说没有影响，所以可以忽略这一部分。
# 那么问题就变成每次选个数减1来达到目标的最小次数。
# 要使次数最小，而且每次只能将元素减1，故应当把所有数减到与最小值相等。
# 若n个元素为a(0),a(1),……,a(n-1)，其中最小值为min，则答案为a(0)+a(1)+……+a(n-1)-min*n。
# 只需求出n个数中的最小值以及它们的和来计算即可，时间复杂度为O(n)。